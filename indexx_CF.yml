AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CustomerName:
    Type: String
    Description: Customer-1
    Default: Customer-1
    
Resources:
  # S3 Bucket Creation
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  # Bucket Policy to allow public access
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'

  # Custom Resource for index.html upload
  S3BucketIndexHtml:
    Type: 'Custom::S3Object'
    Properties:
      ServiceToken: !GetAtt S3BucketFunction.Arn
      BucketName: !Ref S3Bucket
      Key: 'index.html'
      Content: !Sub |
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>CDW MetricVision</title>
          <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background-color: #ffffff;
                margin: 0;
                padding: 0;
                color: #2c3e50;
                display: flex;
                justify-content: center;
                align-items: center;
                flex-direction: column;
                min-height: 100vh;
                background-image: url('https://cdwcustomapplication.s3.amazonaws.com/image_(4)-j1f3dsnvn-transformed.jpeg');
                background-size: cover;
                background-position: center;
            }
            .header {
                font-size: 56px;
                font-weight: bold;
                color: #1a3e59; /* Deep navy blue color for the title */
                text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
                margin-top: 20px;
            }
            .motto {
                font-size: 26px;
                font-style: italic;
                color: #7f8c8d; /* Grey color for the motto */
                margin-top: 10px;
            }
            .content {
                text-align: center;
                margin-top: 50px;
            }
            a {
                display: inline-block;
                text-decoration: none;
                background-color: #ff4d4d;
                color: white;
                padding: 15px 30px;
                border-radius: 50px;
                font-size: 18px;
                margin: 20px 10px;
                transition: background-color 0.3s ease, transform 0.3s ease;
            }
            a:hover {
                background-color: #c0392b;
                transform: scale(1.05);
            }
            img {
                width: 150px;
                margin-top: 20px;
            }
            .footer {
                font-size: 14px;
                color: #7f8c8d;
                margin-top: 50px;
            }
          </style>
        </head>
        <body>
          <img src="cdw-2023-Red.png" alt="CDW Logo">
          <div class="content">
            <div class="header">THE CDW MetricVision</div>
            <div class="motto">The ultimate page to monitor your metrics...</div>
          </div>
          <div>
            <a href="https://myuserpool-domain.auth.us-east-1.amazoncognito.com/login?client_id=3qtbgn503ttnmd75qc6iat3vnt&response_type=code&scope=email+openid&redirect_uri=https%3A%2F%2Fcdwcustomer1.s3.amazonaws.com%2Findex.html">Customer1 Metrics</a>
            <a href="https://myuserpool2-domain.auth.us-east-1.amazoncognito.com/login?client_id=40j5jiq97t90g7jsvjnh1nc66n&response_type=code&scope=email+openid&redirect_uri=https%3A%2F%2Fcdwcustomer2.s3.amazonaws.com%2Findex.html">Customer2 Metrics</a>
          </div>
          <div class="footer">
            &copy; 2024 CDW MetricVision. All rights reserved.
          </div>
        </body>
        </html>
      ContentType: 'text/html'

  # Lambda Function to handle the custom resource
  S3BucketFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: 'index.handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          def handler(event, context):
              s3 = boto3.client('s3')
              bucket = event['ResourceProperties']['BucketName']
              key = event['ResourceProperties']['Key']
              content = event['ResourceProperties']['Content']
              content_type = event['ResourceProperties']['ContentType']
              s3.put_object(Bucket=bucket, Key=key, Body=content, ContentType=content_type)
              cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
      Runtime: 'python3.9'
      Timeout: 30

  # IAM Role for Lambda function
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'S3AccessPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - S3Bucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - S3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content
